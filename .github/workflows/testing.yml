name: Testing CI

# Controls when the workflow will run
on:
  pull_request:
    branches:
    - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    env:
      MINT_PATH: mint/lib
      MINT_LINK_PATH: mint/bin
      DEVELOPER_DIR: /Applications/Xcode_12.4.0.app/Contents/Developer
    steps:
      - uses: actions/checkout@v2
      - name: Mint Version
        id: mint-ver
        run: |
            echo "::set-output name=ver::$(mint --version)"
      - name: Cache Mint bin
        id: cache-mint-bin
        uses: actions/cache@v2
        with:
          path: /usr/local/bin/mint
          key: ${{ runner.os }}-mint-bin-${{ steps.mint-ver.outputs.ver }}
          restore-keys: |
            ${{ runner.os }}-mint-bin-
      - name: Cache Mint packages
        uses: actions/cache@v2
        with:
          path: mint
          key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
          restore-keys: |
            ${{ runner.os }}-mint-
      - name: Checkout yonaskolb/Mint
        if: steps.cache-mint-bin.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: yonaskolb/Mint
          path: Mint
      - name: Build Mint
        if: steps.cache-mint-bin.outputs.cache-hit != 'true'
        run: sudo make
        working-directory: ./Mint
      - name: Remove Mint/
        run: sudo rm -rf Mint/
      - run: mint --version
      - name: Generate .xcodeproj
        run: make xcodeproj
      - name: application test
        run: |
              set -o pipefail &&
              xcodebuild -project ace-c-ios.xcodeproj -scheme Tests -configuration Debug -sdk iphonesimulator -destination "name=iPhone 12" ENABLE_TESTABILITY=YES clean test | xcpretty -c
